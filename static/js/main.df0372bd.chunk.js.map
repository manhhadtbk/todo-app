{"version":3,"sources":["api/client.js","features/filters/filtersSlice.js","features/todos/todosSlice.js","features/header/Header.js","features/todos/times-solid.svg","features/filters/colors.js","features/todos/TodoListItem.js","features/todos/TodoList.js","features/footer/Footer.js","App.js","api/server.js","store.js","index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","client","_x","_client","apply","arguments","_asyncToGenerator","_callee","endpoint","_ref","body","customConfig","headers","config","data","response","_args","_context","_objectWithoutProperties","_excluded","_objectSpread","JSON","stringify","window","fetch","json","ok","statusText","t0","message","get","post","StatusFilters","All","Active","Completed","initialState","status","colors","filtersSlice","createSlice","reducers","statusFilterChanged","action","payload","colorFilterChanged","reducer","_action$payload","color","changeType","includes","filter","existingColor","prepare","_filtersSlice$actions","actions","todosAdapter","createEntityAdapter","getInitialState","fetchTodos","createAsyncThunk","todos","saveNewTodo","_ref2","_callee2","text","initialTodo","_context2","todo","todosSlice","todoToggled","todoId","entities","completed","todoColorSelected","todoDeleted","removeOne","allTodosCompleted","completedTodosCleared","completedIds","map","id","removeMany","extraReducers","builder","addCase","pending","fulfilled","setAll","addOne","_todosSlice$actions","todoAdded","_todosAdapter$getSele","getSelectors","selectTodos","selectAll","selectTodoById","selectById","selectFilteredTodos","createSelector","filters","showAllCompletions","completedStatus","statusMatches","colorMatches","selectFilteredTodoIds","filteredTodos","Header","_useState","useState","_useState2","_slicedToArray","setText","_useState3","_useState4","setStatus","dispatch","useDispatch","handleKeyDown","e","trimmedText","trim","which","isLoading","placeholder","loader","React","createElement","className","onChange","target","onKeyDown","disabled","availableColors","capitalize","s","toUpperCase","TodoListItem","useSelector","colorOptions","c","checked","style","onClick","TodoList","todoIds","renderedListItems","RemainingTodos","count","suffix","StatusFilter","renderedFilters","ColorFilters","_ref3","renderedColors","backgroundColor","Footer","todosRemaining","_useSelector","App","IdSerializer","RestSerializer","extend","serializeIds","rng","seedrandom","randomFromArray","array","min","max","Math","ceil","floor","todoTemplates","base","Server","routes","this","namespace","timing","resource","server","schema","req","normalizedRequestAttrs","models","Model","list","hasMany","factories","Factory","Number","template","replace","generateTodoText","serializers","serialize","request","numerifyId","seeds","createList","store","configureStore","todosReducer","filtersReducer","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.df0372bd.chunk.js","sourcesContent":["// A tiny wrapper around fetch(), borrowed from\r\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\r\n\r\nexport async function client(endpoint, { body, ...customConfig } = {}) {\r\n  const headers = { 'Content-Type': 'application/json' }\r\n\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers,\r\n    },\r\n  }\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body)\r\n  }\r\n\r\n  let data\r\n  try {\r\n    const response = await window.fetch(endpoint, config)\r\n    data = await response.json()\r\n    if (response.ok) {\r\n      return data\r\n    }\r\n    throw new Error(response.statusText)\r\n  } catch (err) {\r\n    return Promise.reject(err.message ? err.message : data)\r\n  }\r\n}\r\n\r\nclient.get = function (endpoint, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, method: 'GET' })\r\n}\r\n\r\nclient.post = function (endpoint, body, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, body })\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const StatusFilters = {\r\n  All: 'all',\r\n  Active: 'active',\r\n  Completed: 'completed',\r\n}\r\n\r\nconst initialState = {\r\n  status: StatusFilters.All,\r\n  colors: [],\r\n}\r\n\r\nconst filtersSlice = createSlice({\r\n  name: 'filters',\r\n  initialState,\r\n  reducers: {\r\n    statusFilterChanged(state, action) {\r\n      state.status = action.payload\r\n    },\r\n    colorFilterChanged: {\r\n      reducer(state, action) {\r\n        let { color, changeType } = action.payload\r\n        const { colors } = state\r\n        switch (changeType) {\r\n          case 'added': {\r\n            if (!colors.includes(color)) {\r\n              colors.push(color)\r\n            }\r\n            break\r\n          }\r\n          case 'removed': {\r\n            state.colors = colors.filter(\r\n              (existingColor) => existingColor !== color\r\n            )\r\n          }\r\n          default:\r\n            return\r\n        }\r\n      },\r\n      prepare(color, changeType) {\r\n        return {\r\n          payload: { color, changeType },\r\n        }\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nexport const { colorFilterChanged, statusFilterChanged } = filtersSlice.actions\r\n\r\nexport default filtersSlice.reducer\r\n","import {\r\n  createSlice,\r\n  createSelector,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport { client } from '../../api/client'\r\nimport { StatusFilters } from '../filters/filtersSlice'\r\n\r\nconst todosAdapter = createEntityAdapter()\r\n\r\nconst initialState = todosAdapter.getInitialState({\r\n  status: 'idle',\r\n})\r\n\r\n// Thunk functions\r\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\r\n  const response = await client.get('/fakeApi/todos')\r\n  return response.todos\r\n})\r\n\r\nexport const saveNewTodo = createAsyncThunk(\r\n  'todos/saveNewTodo',\r\n  async (text) => {\r\n    const initialTodo = { text }\r\n    const response = await client.post('/fakeApi/todos', { todo: initialTodo })\r\n    return response.todo\r\n  }\r\n)\r\n\r\nconst todosSlice = createSlice({\r\n  name: 'todos',\r\n  initialState,\r\n  reducers: {\r\n    todoToggled(state, action) {\r\n      const todoId = action.payload\r\n      const todo = state.entities[todoId]\r\n      todo.completed = !todo.completed\r\n    },\r\n    todoColorSelected: {\r\n      reducer(state, action) {\r\n        const { color, todoId } = action.payload\r\n        state.entities[todoId].color = color\r\n      },\r\n      prepare(todoId, color) {\r\n        return {\r\n          payload: { todoId, color },\r\n        }\r\n      },\r\n    },\r\n    todoDeleted: todosAdapter.removeOne,\r\n    allTodosCompleted(state, action) {\r\n      Object.values(state.entities).forEach((todo) => {\r\n        todo.completed = true\r\n      })\r\n    },\r\n    completedTodosCleared(state, action) {\r\n      const completedIds = Object.values(state.entities)\r\n        .filter((todo) => todo.completed)\r\n        .map((todo) => todo.id)\r\n      todosAdapter.removeMany(state, completedIds)\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTodos.pending, (state, action) => {\r\n        state.status = 'loading'\r\n      })\r\n      .addCase(fetchTodos.fulfilled, (state, action) => {\r\n        todosAdapter.setAll(state, action.payload)\r\n        state.status = 'idle'\r\n      })\r\n      .addCase(saveNewTodo.fulfilled, todosAdapter.addOne)\r\n  },\r\n})\r\n\r\nexport const {\r\n  allTodosCompleted,\r\n  completedTodosCleared,\r\n  todoAdded,\r\n  todoColorSelected,\r\n  todoDeleted,\r\n  todoToggled,\r\n} = todosSlice.actions\r\n\r\nexport default todosSlice.reducer\r\n\r\nexport const {\r\n  selectAll: selectTodos,\r\n  selectById: selectTodoById,\r\n} = todosAdapter.getSelectors((state) => state.todos)\r\n\r\nexport const selectTodoIds = createSelector(\r\n  // First, pass one or more \"input selector\" functions:\r\n  selectTodos,\r\n  // Then, an \"output selector\" that receives all the input results as arguments\r\n  // and returns a final result value\r\n  (todos) => todos.map((todo) => todo.id)\r\n)\r\n\r\nexport const selectFilteredTodos = createSelector(\r\n  // First input selector: all todos\r\n  selectTodos,\r\n  // Second input selector: all filter values\r\n  (state) => state.filters,\r\n  // Output selector: receives both values\r\n  (todos, filters) => {\r\n    const { status, colors } = filters\r\n    const showAllCompletions = status === StatusFilters.All\r\n    if (showAllCompletions && colors.length === 0) {\r\n      return todos\r\n    }\r\n\r\n    const completedStatus = status === StatusFilters.Completed\r\n    // Return either active or completed todos based on filter\r\n    return todos.filter((todo) => {\r\n      const statusMatches =\r\n        showAllCompletions || todo.completed === completedStatus\r\n      const colorMatches = colors.length === 0 || colors.includes(todo.color)\r\n      return statusMatches && colorMatches\r\n    })\r\n  }\r\n)\r\n\r\nexport const selectFilteredTodoIds = createSelector(\r\n  // Pass our other memoized selector as an input\r\n  selectFilteredTodos,\r\n  // And derive data in the output selector\r\n  (filteredTodos) => filteredTodos.map((todo) => todo.id)\r\n)\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { saveNewTodo } from '../todos/todosSlice'\r\n\r\nconst Header = () => {\r\n  const [text, setText] = useState('')\r\n  const [status, setStatus] = useState('idle')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (e) => setText(e.target.value)\r\n\r\n  const handleKeyDown = async (e) => {\r\n    // If the user pressed the Enter key:\r\n    const trimmedText = text.trim()\r\n    if (e.which === 13 && trimmedText) {\r\n      // Create and dispatch the thunk function itself\r\n      setStatus('loading')\r\n      await dispatch(saveNewTodo(trimmedText))\r\n      // And clear out the text input\r\n      setText('')\r\n      setStatus('idle')\r\n    }\r\n  }\r\n\r\n  let isLoading = status === 'loading'\r\n  let placeholder = isLoading ? '' : 'What needs to be done?'\r\n  let loader = isLoading ? <div className=\"loader\" /> : null\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <input\r\n        className=\"new-todo\"\r\n        placeholder={placeholder}\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        disabled={isLoading}\r\n      />\r\n      {loader}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","var _path;\nvar _excluded = [\"svgRef\", \"title\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from \"react\";\nvar SvgTimesSolid = function SvgTimesSolid(_ref) {\n  var svgRef = _ref.svgRef,\n    title = _ref.title,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"times\",\n    className: \"svg-inline--fa fa-times fa-w-11\",\n    role: \"img\",\n    viewBox: \"0 0 352 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\n  })));\n};\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTimesSolid, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/times-solid.62038fcb.svg\";\nexport { ForwardRef as ReactComponent };","export const availableColors = ['green', 'blue', 'orange', 'purple', 'red']\r\n\r\nexport const capitalize = (s) => s[0].toUpperCase() + s.slice(1)\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { ReactComponent as TimesSolid } from './times-solid.svg'\r\n\r\nimport { availableColors, capitalize } from '../filters/colors'\r\nimport {\r\n  todoColorSelected,\r\n  todoDeleted,\r\n  todoToggled,\r\n  selectTodoById,\r\n} from './todosSlice'\r\n\r\n// Destructure `props.id`, since we just need the ID value\r\nconst TodoListItem = ({ id }) => {\r\n  // Call our `selectTodoById` with the state _and_ the ID value\r\n  const todo = useSelector((state) => selectTodoById(state, id))\r\n  const { text, completed, color } = todo\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleCompletedChanged = () => {\r\n    dispatch(todoToggled(todo.id))\r\n  }\r\n\r\n  const handleColorChanged = (e) => {\r\n    const color = e.target.value\r\n    dispatch(todoColorSelected(todo.id, color))\r\n  }\r\n\r\n  const onDelete = () => {\r\n    dispatch(todoDeleted(todo.id))\r\n  }\r\n\r\n  const colorOptions = availableColors.map((c) => (\r\n    <option key={c} value={c}>\r\n      {capitalize(c)}\r\n    </option>\r\n  ))\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"view\">\r\n        <div className=\"segment label\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={handleCompletedChanged}\r\n          />\r\n          <div className=\"todo-text\">{text}</div>\r\n        </div>\r\n        <div className=\"segment buttons\">\r\n          <select\r\n            className=\"colorPicker\"\r\n            value={color}\r\n            style={{ color }}\r\n            onChange={handleColorChanged}\r\n          >\r\n            <option value=\"\"></option>\r\n            {colorOptions}\r\n          </select>\r\n          <button className=\"destroy\" onClick={onDelete}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoListItem\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport TodoListItem from './TodoListItem'\r\n\r\nimport { selectFilteredTodoIds } from './todosSlice'\r\n\r\nconst TodoList = () => {\r\n  const todoIds = useSelector(selectFilteredTodoIds)\r\n  const loadingStatus = useSelector((state) => state.todos.status)\r\n\r\n  if (loadingStatus === 'loading') {\r\n    return (\r\n      <div className=\"todo-list\">\r\n        <div className=\"loader\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderedListItems = todoIds.map((todoId) => {\r\n    return <TodoListItem key={todoId} id={todoId} />\r\n  })\r\n\r\n  return <ul className=\"todo-list\">{renderedListItems}</ul>\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { availableColors, capitalize } from '../filters/colors'\r\nimport {\r\n  StatusFilters,\r\n  colorFilterChanged,\r\n  statusFilterChanged,\r\n} from '../filters/filtersSlice'\r\nimport {\r\n  completedTodosCleared,\r\n  allTodosCompleted,\r\n  selectTodos,\r\n} from '../todos/todosSlice'\r\n\r\nconst RemainingTodos = ({ count }) => {\r\n  const suffix = count === 1 ? '' : 's'\r\n\r\n  return (\r\n    <div className=\"todo-count\">\r\n      <h5>Remaining Todos</h5>\r\n      <strong>{count}</strong> item{suffix} left\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StatusFilter = ({ value: status, onChange }) => {\r\n  const renderedFilters = Object.keys(StatusFilters).map((key) => {\r\n    const value = StatusFilters[key]\r\n    const handleClick = () => onChange(value)\r\n    const className = value === status ? 'selected' : ''\r\n\r\n    return (\r\n      <li key={value}>\r\n        <button className={className} onClick={handleClick}>\r\n          {key}\r\n        </button>\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"filters statusFilters\">\r\n      <h5>Filter by Status</h5>\r\n      <ul>{renderedFilters}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ColorFilters = ({ value: colors, onChange }) => {\r\n  const renderedColors = availableColors.map((color) => {\r\n    const checked = colors.includes(color)\r\n    const handleChange = () => {\r\n      const changeType = checked ? 'removed' : 'added'\r\n      onChange(color, changeType)\r\n    }\r\n\r\n    return (\r\n      <label key={color}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={color}\r\n          checked={checked}\r\n          onChange={handleChange}\r\n        />\r\n        <span\r\n          className=\"color-block\"\r\n          style={{\r\n            backgroundColor: color,\r\n          }}\r\n        ></span>\r\n        {capitalize(color)}\r\n      </label>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"filters colorFilters\">\r\n      <h5>Filter by Color</h5>\r\n      <form className=\"colorSelection\">{renderedColors}</form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Footer = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const todosRemaining = useSelector((state) => {\r\n    const uncompletedTodos = selectTodos(state).filter(\r\n      (todo) => !todo.completed\r\n    )\r\n    return uncompletedTodos.length\r\n  })\r\n\r\n  const { status, colors } = useSelector((state) => state.filters)\r\n\r\n  const onMarkCompletedClicked = () => dispatch(allTodosCompleted())\r\n  const onClearCompletedClicked = () => dispatch(completedTodosCleared())\r\n\r\n  const onColorChange = (color, changeType) =>\r\n    dispatch(colorFilterChanged(color, changeType))\r\n\r\n  const onStatusChange = (status) => dispatch(statusFilterChanged(status))\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"actions\">\r\n        <h5>Actions</h5>\r\n        <button className=\"button\" onClick={onMarkCompletedClicked}>\r\n          Mark All Completed\r\n        </button>\r\n        <button className=\"button\" onClick={onClearCompletedClicked}>\r\n          Clear Completed\r\n        </button>\r\n      </div>\r\n\r\n      <RemainingTodos count={todosRemaining} />\r\n      <StatusFilter value={status} onChange={onStatusChange} />\r\n      <ColorFilters value={colors} onChange={onColorChange} />\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nimport Header from './features/header/Header'\r\nimport TodoList from './features/todos/TodoList'\r\nimport Footer from './features/footer/Footer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav>\r\n        <section>\r\n          <h1>Redux Fundamentals Example</h1>\r\n        </section>\r\n      </nav>\r\n      <main>\r\n        <section className=\"medium-container\">\r\n          <h2>Todos</h2>\r\n          <div className=\"todoapp\">\r\n            <Header />\r\n            <TodoList />\r\n            <Footer />\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport { Server, Model, Factory, hasMany, RestSerializer } from 'miragejs'\r\n\r\nimport faker from 'faker'\r\nimport seedrandom from 'seedrandom'\r\n\r\nconst IdSerializer = RestSerializer.extend({\r\n  serializeIds: 'always',\r\n})\r\n\r\n// Set up a seeded random number generator, so that we get\r\n// a consistent set of users / entries each time the page loads.\r\n// This can be reset by deleting this localStorage value,\r\n// or turned off by setting `useSeededRNG` to false.\r\nlet useSeededRNG = false\r\n\r\nlet rng = seedrandom()\r\n\r\nif (useSeededRNG) {\r\n  let randomSeedString = localStorage.getItem('randomTimestampSeed')\r\n  let seedDate\r\n\r\n  if (randomSeedString) {\r\n    seedDate = new Date(randomSeedString)\r\n  } else {\r\n    seedDate = new Date()\r\n    randomSeedString = seedDate.toISOString()\r\n    localStorage.setItem('randomTimestampSeed', randomSeedString)\r\n  }\r\n\r\n  rng = seedrandom(randomSeedString)\r\n  faker.seed(seedDate.getTime())\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min)\r\n  max = Math.floor(max)\r\n  return Math.floor(rng() * (max - min + 1)) + min\r\n}\r\n\r\nconst randomFromArray = (array) => {\r\n  const index = getRandomInt(0, array.length - 1)\r\n  return array[index]\r\n}\r\n\r\nconst todoTemplates = [\r\n  { base: 'Buy $THING', values: ['milk', 'bread', 'cheese', 'toys'] },\r\n  { base: 'Clean $THING', values: ['house', 'yard', 'bedroom', 'car'] },\r\n  { base: 'Read $THING', values: ['newspaper', 'book', 'email'] },\r\n]\r\n\r\nconst generateTodoText = () => {\r\n  const template = randomFromArray(todoTemplates)\r\n  const value = randomFromArray(template.values)\r\n  const text = template.base.replace('$THING', value)\r\n  return text\r\n}\r\n\r\nnew Server({\r\n  routes() {\r\n    this.namespace = 'fakeApi'\r\n    this.timing = 2000\r\n\r\n    this.resource('todos')\r\n    this.resource('lists')\r\n\r\n    const server = this\r\n\r\n    this.post('/todos', function (schema, req) {\r\n      const data = this.normalizedRequestAttrs()\r\n\r\n      if (data.text === 'error') {\r\n        throw new Error('Could not save the todo!')\r\n      }\r\n\r\n      const result = server.create('todo', data)\r\n      return result\r\n    })\r\n  },\r\n  models: {\r\n    todo: Model.extend({}),\r\n    list: Model.extend({\r\n      todos: hasMany(),\r\n    }),\r\n  },\r\n  factories: {\r\n    todo: Factory.extend({\r\n      id(i) {\r\n        return Number(i)\r\n      },\r\n      text() {\r\n        return generateTodoText()\r\n      },\r\n      completed() {\r\n        return false\r\n      },\r\n      color() {\r\n        return ''\r\n      },\r\n    }),\r\n  },\r\n  serializers: {\r\n    todo: IdSerializer.extend({\r\n      serialize(object, request) {\r\n        // HACK Mirage keeps wanting to store integer IDs as strings. Always convert them to numbers for now.\r\n        const numerifyId = (todo) => {\r\n          todo.id = Number(todo.id)\r\n        }\r\n        let json = IdSerializer.prototype.serialize.apply(this, arguments)\r\n\r\n        if (json.todo) {\r\n          numerifyId(json.todo)\r\n        } else if (json.todos) {\r\n          json.todos.forEach(numerifyId)\r\n        }\r\n\r\n        return json\r\n      },\r\n    }),\r\n    list: IdSerializer,\r\n  },\r\n  seeds(server) {\r\n    server.createList('todo', 5)\r\n  },\r\n})\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport todosReducer from './features/todos/todosSlice'\r\nimport filtersReducer from './features/filters/filtersSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // Define a top-level state field named `todos`, handled by `todosReducer`\r\n    todos: todosReducer,\r\n    filters: filtersReducer,\r\n  },\r\n})\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport './index1.css'\r\nimport App from './App'\r\n\r\nimport './api/server'\r\n\r\nimport store from './store'\r\nimport { fetchTodos } from './features/todos/todosSlice'\r\n\r\nstore.dispatch(fetchTodos())\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}